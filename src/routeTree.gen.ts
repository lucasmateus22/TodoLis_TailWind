/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as layoutLayoutRouteImport } from './routes/(layout)/_layout'
import { Route as layoutLayoutLoginRouteImport } from './routes/(layout)/_layout.login'
import { Route as layoutLayoutDashboardRouteImport } from './routes/(layout)/_layout.dashboard'

const layoutRouteImport = createFileRoute('/(layout)')()

const layoutRoute = layoutRouteImport.update({
  id: '/(layout)',
  getParentRoute: () => rootRouteImport,
} as any)
const layoutLayoutRoute = layoutLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => layoutRoute,
} as any)
const layoutLayoutLoginRoute = layoutLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => layoutLayoutRoute,
} as any)
const layoutLayoutDashboardRoute = layoutLayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => layoutLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof layoutLayoutRouteWithChildren
  '/dashboard': typeof layoutLayoutDashboardRoute
  '/login': typeof layoutLayoutLoginRoute
}
export interface FileRoutesByTo {
  '/': typeof layoutLayoutRouteWithChildren
  '/dashboard': typeof layoutLayoutDashboardRoute
  '/login': typeof layoutLayoutLoginRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(layout)': typeof layoutRouteWithChildren
  '/(layout)/_layout': typeof layoutLayoutRouteWithChildren
  '/(layout)/_layout/dashboard': typeof layoutLayoutDashboardRoute
  '/(layout)/_layout/login': typeof layoutLayoutLoginRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/login'
  id:
    | '__root__'
    | '/(layout)'
    | '/(layout)/_layout'
    | '/(layout)/_layout/dashboard'
    | '/(layout)/_layout/login'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  layoutRoute: typeof layoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(layout)': {
      id: '/(layout)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof layoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(layout)/_layout': {
      id: '/(layout)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof layoutLayoutRouteImport
      parentRoute: typeof layoutRoute
    }
    '/(layout)/_layout/login': {
      id: '/(layout)/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof layoutLayoutLoginRouteImport
      parentRoute: typeof layoutLayoutRoute
    }
    '/(layout)/_layout/dashboard': {
      id: '/(layout)/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof layoutLayoutDashboardRouteImport
      parentRoute: typeof layoutLayoutRoute
    }
  }
}

interface layoutLayoutRouteChildren {
  layoutLayoutDashboardRoute: typeof layoutLayoutDashboardRoute
  layoutLayoutLoginRoute: typeof layoutLayoutLoginRoute
}

const layoutLayoutRouteChildren: layoutLayoutRouteChildren = {
  layoutLayoutDashboardRoute: layoutLayoutDashboardRoute,
  layoutLayoutLoginRoute: layoutLayoutLoginRoute,
}

const layoutLayoutRouteWithChildren = layoutLayoutRoute._addFileChildren(
  layoutLayoutRouteChildren,
)

interface layoutRouteChildren {
  layoutLayoutRoute: typeof layoutLayoutRouteWithChildren
}

const layoutRouteChildren: layoutRouteChildren = {
  layoutLayoutRoute: layoutLayoutRouteWithChildren,
}

const layoutRouteWithChildren =
  layoutRoute._addFileChildren(layoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  layoutRoute: layoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
